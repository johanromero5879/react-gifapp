{"version":3,"sources":["components/AddCategory.js","helpers/utils.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","http","url","a","method","data","request","headers","body","JSON","stringify","fetch","response","json","getGifs","category","encodeURI","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","fetchGifs","useFetchGifs","GifExpertApp","index","ReactDOM","render","document","getElementById"],"mappings":"oMAiCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OAAO,sBAAMC,SAVQ,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,MAKf,SACH,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,8BCPlBG,EAAI,uCAAG,WAAOC,GAAP,iCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,GAC/CC,EAAU,CAAEF,UAEF,QAAXA,IACCE,EAAO,2BACAA,GADA,IAEHC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUL,MATb,SAaOM,MAAMT,EAAKI,GAblB,cAaVM,EAbU,gBAeHA,EAASC,OAfN,oFAAH,sDCEJC,EAAO,uCAAG,WAAQC,GAAR,qBAAAZ,EAAA,6DACbD,EADa,iDACoCc,UAAUD,GAD9C,+DAGId,EAAKC,GAHT,uBAGXG,EAHW,EAGXA,KAEFY,EAAOZ,EAAKa,KAAK,SAAAC,GAAG,YAAK,CAC3BC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXnB,IAAG,UAAEiB,EAAIG,cAAN,aAAE,EAAYC,iBAAiBrB,QARnB,kBAWZe,GAXY,2CAAH,sDCULO,EAVK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOnB,EAAU,EAAVA,IAC9B,OAAO,sBAAKuB,UAAU,yCAAf,UACH,qBACIC,IAAMxB,EACNyB,IAAMN,IAEV,4BAAKA,QCeEO,EApBC,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAEf,ECFwB,SAAEA,GAC1B,MAA0B3B,mBAAS,CAC/BiB,KAAM,GACNwB,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,YACS,uCAAG,4BAAA7B,EAAA,sEACKW,EAAQC,GADb,OACRE,EADQ,OAEdc,EAAS,CACL1B,KAAMY,EACNY,SAAS,IAJC,2CAAH,oDAOfI,KACD,CAAElB,IAEEe,EDf0BI,CAAcnB,GAAlCO,EAAb,EAAQjB,KAAawB,EAArB,EAAqBA,QAErB,OAAO,qCACH,oBAAIJ,UAAU,oCAAd,SAAoDV,IACpD,sBAAKU,UAAU,YAAf,UACMI,GAAW,mBAAGJ,UAAU,mCAAb,qBAETH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,cEcnBe,EAxBM,WACjB,MAAsC/C,mBAAS,CAAC,aAAhD,mBAAQQ,EAAR,KAAoBT,EAApB,KAQA,OAAO,qCACH,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEIS,EAAWsB,KAAK,SAACH,EAAUqB,GAAX,OACZ,cAAC,EAAD,CACIrB,SAAWA,GACLqB,U,YCd1BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c659e743.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( categories => [ inputValue, ...categories ] )\r\n            setInputValue('')\r\n        }\r\n        \r\n    }\r\n\r\n    return <form onSubmit={ handleSubmit }>\r\n        <input \r\n            type=\"text\" \r\n            value={ inputValue }\r\n            onChange={ handleInputChange }\r\n        />\r\n    </form>\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory","export const http = async (url, method = 'GET', data = {}) => {\r\n    let request = { method }\r\n\r\n    if(method !== 'GET'){\r\n        request = {\r\n            ...request,\r\n            headers: { \r\n                'Content-Type': 'application/json' \r\n            },\r\n            body: JSON.stringify(data)\r\n        }\r\n    }\r\n\r\n    const response = await fetch(url, request)\r\n\r\n    return await response.json()\r\n}","import { http } from './utils'\r\n\r\nexport const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=4MXpeLR2CbXSHzLY33JChUYlJCmRPIpx`\r\n\r\n    const { data } = await http(url)\r\n\r\n    const gifs = data.map( img => ({\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url\r\n    }))\r\n\r\n    return gifs\r\n}","// import { useState } from 'react'\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n    return <div className=\"card animate__animated animate__fadeIn\">\r\n        <img \r\n            src={ url }\r\n            alt={ title }\r\n        />\r\n        <p>{ title }</p>\r\n    </div>\r\n}\r\n\r\nexport default GifGridItem\r\n","import { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem'\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category )\r\n    \r\n    return <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n        <div className=\"card-grid\">\r\n            { loading && <p className=\"animate__animated animate__flash\" >Loading</p> }\r\n            {\r\n                images.map( img => (\r\n                    <GifGridItem \r\n                        key={ img.id }\r\n                        { ...img }\r\n                    />\r\n                ) )\r\n            }\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default GifGrid\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        const fetchGifs = async () => {\r\n            const gifs = await getGifs(category)\r\n            setState({\r\n                data: gifs,\r\n                loading: false\r\n            })\r\n        }\r\n        fetchGifs()\r\n    }, [ category ])\r\n\r\n    return state\r\n}","import { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [ categories, setCategories ] = useState(['Hi anime'])\r\n\r\n    // const handleApp = () => {\r\n    //     // setCategories( cats => [...cats, 'Kiss'] )\r\n    //     setCategories([...categories, 'Kiss'])\r\n        \r\n    // }\r\n\r\n    return <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={ setCategories } />\r\n        <hr />\r\n        { \r\n            categories.map( (category, index) => (\r\n                <GifGrid \r\n                    category={ category }\r\n                    key={ index } \r\n                />\r\n            ) )\r\n        }\r\n    </>\r\n}\r\n\r\nexport default GifExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport 'animate.css'\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}